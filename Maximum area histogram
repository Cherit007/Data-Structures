//here we found nll towards left of currrent element and nlr towards current element

left=[]
right=[]
area=[]
for i in range(len(s)):
    for j in range(i-1,-2,-1):
        if j<0:
            left.append(-1)
            break
        elif s[i]>=s[j]:
            left.append(j)
            break
       
    for j in range(i+1,len(s)+1):
        if j>=len(s):
            right.append(j+1)
            break
        if s[i]>s[j]:
            right.append(j)
            break
    area.append((right[i]-left[i]-1)*s[i])
        
print(max(area))

//Using C++

#include<bits/stdc++.h>
using namespace std;

vector<int> nsr(int a[],int n)
{
    vector <int> v;
    stack < pair<int,int> > st;
    for(int i=n-1;i>=0;i--)
    {
        if(st.empty())
            v.push_back(n);
        else if(!st.empty()&&st.top().first<a[i])
        {
            v.push_back(st.top().second);
        }
        else
        {
            while(!st.empty()&&st.top().first>=a[i])
            {
                st.pop();
            }
            if(st.empty())
                v.push_back(n);
            else
                v.push_back(st.top().second);
        }
        st.push({a[i],i});
    }
    reverse(v.begin(),v.end());
    return v;
}

vector<int> nsl(int a[],int n)
{
    vector <int> v;
    stack < pair<int,int> > st;
    for(int i=0;i<n;i++)
    {
        if(st.empty())
            v.push_back(-1);
        else if(!st.empty()&&st.top().first<a[i])
        {
            v.push_back(st.top().second);
        }
        else
        {
            while(!st.empty()&&st.top().first>=a[i])
            {
                st.pop();
            }
            if(st.empty())
                v.push_back(-1);
            else
                v.push_back(st.top().second);
        }
        st.push({a[i],i});
    }
    return v;
}
int main()
{
    int n;
    cin>>n;int a[n];
    for(int i=0;i<n;i++)cin>>a[i];
    vector<int> v1,v2,v3;
    v1=nsr(a,n);
    v2=nsl(a,n);
    for(int i=0;i<n;i++)
    v3.push_back(a[i]*abs(v1[i]-v2[i]-1));
    cout<<*max_element(v3.begin(),v3.end());

}
